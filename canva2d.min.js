/**
 * Name         : Canva2d.js
 * @author      : Mirielle S. (codeBreaker!)
 * Last Modified: 04.09.2020
 * Revision     : 0.0.2
 * Minified with tersser
 * @url https://gist.github.com/gaearon/42a2ffa41b8319948f9be4076286e1f3
 * 
 * MIT License
 * 
 * Copyright (c) 2020 CodeBreaker
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
 */

let CURRENT_CONTEXT;const AbstractBaseMixin={debug:!1,checkDebug(t,i){this.debug&&t(i)}};CanvasRenderingContext2D.prototype.__proto__={clearColor(t,i,e,s,h){this.fillStyle=h,void 0!==h?this.fillRect(t,i,e,s):this.clearRect(t,i,e,s)},line(t,i,e,s,h){this.strokeStyle=h,this.beginPath(),this.moveTo(t,i),this.lineTo(e,s),this.stroke(),this.closePath()},Joystick2dArc(t,i,e,s,h,n=0){this.save(),this.lineWidth=n,this.strokeStyle=h||s,this.fillStyle=s,this.beginPath(),this.arc(t,i,e,0,2*Math.PI),this.closePath(),"none"!==h&&""!==h&&this.stroke(),void 0!==s&&"none"!==s&&""!==s&&this.fill(),this.restore()}},Math.__proto__={getPolarCoord:(t=0,i=0)=>({x:Math.cos(t)*i,y:Math.sin(t)*i})};const Vector=function(t,i){this.x=t,this.y=i,this.magnitude=Math.hypot(this.x,this.y),this.angle=Math.atan2(this.y,this.x)};Vector.prototype={normalise(){let t=this.magnitude();this.x/=t,this.y/=t},add(t){let i=this.x+t.x,e=this.y+t.y;return new Vector(i,e)},subtract(t){let i=this.x-t.x,e=this.y-t.y;return new Vector(i,e)},multiply(t){let i=this.x*t.x,e=this.y*t.y;return new Vector(i,e)},dot(t){return this.x*t.x+this.y*t.y},toString(){return`Vector's object with the component X and Y as ${this.x}, ${this.y} respectively`}};class Camera extends Vector{constructor(t=0,i=0,e=0,s=0){super(t,i),this.w=e,this.h=s,this.maxDimension=new Vector(0,0)}follow(t){if(0===this.maxDimension.y&&0===this.maxDimension.x)throw new Error("Please provide the maximum dimension for the camera");let i=new Vector(t.getCenterX(),t.getCenterY()).subtract({x:.5*this.w,y:.5*this.h});this.x=i.x,this.y=i.y,this.x=Math.min(Math.max(0,this.x),Math.min(this.maxDimension.x-this.w,Math.max(0,i.x))),this.y=Math.min(Math.max(0,this.y),Math.min(this.maxDimension.y-this.h,Math.max(0,i.y)))}}class Component extends Vector{constructor(t=0,i=0,e=0,s=0){super(t,i),this.w=e,this.h=s}getCenterX(){return this.x+.5*this.w}getCenterY(){return this.y+.5*this.h}}class Sprite extends Component{constructor(t,i,e,s,h,n,o=0){super(t,i,e,s),this.data=h,this.img=this.data.img,this.tileW=this.data.w,this.tileH=this.data.h,this.spacing=this.data.spacing,this.frame=this.data.frame.filter(t=>t.name===n)[0],this.frameName="",this.currentFrame=[],this.frameIndex=0;for(const t in this.frame)this.setFrame(t);this.src=new Vector(void 0,void 0),this.delay=o,this.maximumDelay=o}setFrame(t){if(this.frameName=t,void 0===this.frame[t])throw new Error(`"${t}" is not a valid frame's name`);this.currentFrame=this.frame[t]}getFrame(){return this.frameName}animate(){if(this.currentFrame.length<1||!(this.currentFrame instanceof Array))throw new Error("Current Animation's Frame does not exist");if(this.delay--,this.delay<0){this.delay=this.maximumDelay,this.frameIndex++,this.frameIndex>=this.currentFrame.length&&(this.frameIndex=0);let t=this.currentFrame[this.frameIndex]-1;this.src=this.data.indexAt(t)}}}class SwipeControl{constructor(t,i="default",e=!1){if(this.element=t,this.direction=null,this.isActive=!1,this.pos=new Vector(0,0),void 0!==i)switch(i.toLowerCase()){case"touch":this.touch();break;case"mouse":this.mouse();break;case"default":this.mouse(),this.touch();break;default:throw new Error(`Swipe of type "${i}" does not exist`)}else this.mouse(),this.touch();this.debug=e}checkSwipe(t,i){let e=i.subtract(t);Math.abs(e.x)>Math.abs(e.y)?e.x<0?this.direction="left":this.direction="right":e.y<0?this.direction="up":this.direction="down"}touch(){this.element.addEventListener("touchstart",t=>{this.isActive=!0,this.pos=new Vector(t.touches[0].pageX,t.touches[0].pageY),this.checkDebug(console.log,"Swipe Starts...")}),this.element.addEventListener("touchmove",t=>{this.checkSwipe(this.pos,new Vector(t.touches[0].pageX,t.touches[0].pageY)),this.element.dispatchEvent(new CustomEvent("swipe",{detail:{e:t,isActive:this.isActive,originX:this.pos.x,originY:this.pos.y,clientX:t.touches[0].pageX,clientY:t.touches[0].pageY,direction:this.direction}})),this.checkDebug(console.log,this.direction.toUpperCase()+" Swipe"),t.preventDefault()}),this.element.addEventListener("touchend",()=>{this.isActive=!1,this.pos=new Vector(0,0),this.checkDebug(console.log,"Swipe ends...")})}mouse(){this.element.addEventListener("mousedown",t=>{this.isActive=!0,this.pos=new Vector(t.clientX,t.clientY),this.checkDebug(console.log,"Swipe Starts.....")}),this.element.addEventListener("mousemove",t=>{this.isActive&&(this.checkSwipe(this.pos,new Vector(t.clientX,t.clientY)),this.element.dispatchEvent(new CustomEvent("swipe",{detail:{e:t,isActive:this.isActive,originX:this.pos.x,originY:this.pos.y,clientX:t.clientX,clientY:t.clientY,direction:this.direction}})),this.checkDebug(console.log,this.direction.toUpperCase()+" Swipe"))}),this.element.addEventListener("mouseup",()=>{this.isActive=!1,this.pos=new Vector(0,0),this.checkDebug(console.log,"Swipe Ends...")})}}Object.assign(SwipeControl.prototype,AbstractBaseMixin);class Joystick{constructor(t,i){this.canvas=t;try{this.ctx=this.canvas.getContext("2d")}catch(t){throw new Error("Joystick Failed to intialize CANVAS")}if(this.dynamic=!1!==i.dynamic,this.debug=i.debug||!1,this.origin=new Vector(i.x||0,i.y||0),this.pos=new Vector(i.x||0,i.y||0),this.direction=null,this.color=i.color||"lightgray",this.lineWidth=i.lineWidth||4,this.outlineColor=i.outlineColor||"#222",this.innerRadius=i.innerRadius||15,this.backgroundColor=i.backgroundColor||"none",this.backgroundOutlineColor=i.backgroundOutlineColor||"#222",this.backgroundLineWidth=i.backgroundLineWidth||4,this.outerRadius=i.outerRadius||50,this.isActive=!1,this.timeSpan=i.fadeIn||100,this.timeSpanCounter=this.timeSpan,this.speedCounter=0,this.isDisplay=!1,this.isFading=!1,this.alpha=1,void 0!==i.type)switch(i.type.toLowerCase()){case"touch":this.touch();break;case"mouse":this.mouse();break;case"default":this.mouse(),this.touch();break;default:console.error(i.type+" types does not exists")}else this.mouse(),this.touch();this.checkDebug(console.log,"Joystick Initialized successfully")}draw(){this.ctx.save(),this.ctx.globalAlpha=this.alpha,this.ctx.Joystick2dArc(this.origin.x,this.origin.y,this.outerRadius,this.backgroundColor,this.backgroundOutlineColor,this.backgroundLineWidth),this.ctx.Joystick2dArc(this.pos.x,this.pos.y,this.innerRadius,this.color,this.outlineColor,this.lineWidth),this.ctx.restore()}fadeIn(){this.isFading&&(this.timeSpanCounter-=1,this.alpha=Math.abs(this.timeSpanCounter/this.timeSpan),this.alpha<=0&&(this.isDisplay=!1,this.timeSpanCounter=this.timeSpan))}checkSwipe(t,i){let e=i.subtract(t);Math.abs(e.x)>Math.abs(e.y)?e.x<0?this.direction="left":this.direction="right":e.y<0?this.direction="up":this.direction="down"}mouse(){this.canvas.addEventListener("mousedown",t=>{if(this.dynamic){let i=this.canvas.getBoundingClientRect();this.origin=new Vector(t.clientX,t.clientY).subtract({x:i.x,y:i.y}),this.pos=new Vector(t.clientX,t.clientY).subtract({x:i.x,y:i.y}),this.isDisplay=!0,this.isFading=!1,this.alpha=1}this.isActive=!0,this.checkDebug(console.log,"Joystick Starting...")}),this.canvas.addEventListener("mousemove",t=>{if(this.isActive){let i=this.canvas.getBoundingClientRect(),e=new Vector(t.clientX,t.clientY).subtract({x:i.x,y:i.y}).subtract(this.origin);this.checkSwipe(this.origin,new Vector(t.clientX,t.clientY));let s=Math.min(e.magnitude,this.outerRadius);this.pos.x=this.origin.x+Math.cos(e.angle)*s,this.pos.y=this.origin.y+Math.sin(e.angle)*s,this.canvas.dispatchEvent(new CustomEvent("joystick",{detail:{e:t,angle:e.angle,magnitude:e.magnitude,direction:this.direction,originX:this.origin.x,originY:this.origin.y,clientX:t.clientX,clientY:t.clientY,isActive:this.isActive}}))}}),this.canvas.addEventListener("mouseup",()=>{this.dynamic?(this.isActive=!1,this.isFading=!0):this.pos=new Vector(this.origin.x,this.origin.y),this.direction=null,this.checkDebug(console.log,"Joystick waiting...")})}touch(){this.canvas.addEventListener("touchstart",t=>{if(this.dynamic){let i=this.canvas.getBoundingClientRect();this.origin=new Vector(t.touches[0].pageX,t.touches[0].pageY).subtract({x:i.x,y:i.y}),this.pos=new Vector(t.touches[0].pageX,t.touches[0].pageY).subtract({x:i.x,y:i.y}),this.isDisplay=!0,this.isFading=!1,this.alpha=1}this.isActive=!0,this.checkDebug(console.log,"Joystick Starting...")}),this.canvas.addEventListener("touchmove",t=>{let i=this.canvas.getBoundingClientRect(),e=new Vector(t.touches[0].pageX,t.touches[0].pageY).subtract({x:i.x,y:i.y}).subtract(this.origin),s=Math.min(e.magnitude,this.outerRadius);this.pos.x=this.origin.x+Math.cos(e.angle)*s,this.pos.y=this.origin.y+Math.sin(e.angle)*s,this.checkSwipe(this.origin,new Vector(t.touches[0].pageX,t.touches[0].pageY)),this.canvas.dispatchEvent(new CustomEvent("joystick",{detail:{e:t,angle:e.angle,magnitude:e.magnitude,direction:this.direction,originX:this.origin.x,originY:this.origin.y,clientX:t.clientX,clientY:t.clientY,isActive:this.isActive}})),t.preventDefault(),this.checkDebug(console.log,~~(180*e.angle/Math.PI)+" angle")}),this.canvas.addEventListener("touchend",()=>{this.dynamic?this.isFading=!0:this.pos=new Vector(this.origin.x,this.origin.y),this.isActive=!1,this.checkDebug(console.log,"Joystick waiting...")})}show(){this.dynamic?(this.isDisplay&&this.draw(),this.fadeIn()):(this.isFading=!1,this.isDisplay=!0,this.alpha=1,this.draw())}}Object.assign(Joystick.prototype,AbstractBaseMixin);class TileMap{constructor(t){if(this.map=t.map||[0],!(this.map instanceof Array))throw new Error("world map can only be respresented as a 2D Array");if(this.w=t.w,this.h=t.h,this.mapSize=new Vector(this.map[0].length,this.map.length),this.mapDimension=new Vector(this.w,this.h).multiply(this.mapSize),this.camera=t.camera||new Camera(0,0,this.mapDimension.x,this.mapDimension.y),!(this.camera instanceof Camera))throw this.checkDebug(console.log,"Camera can only be a prototype of Camera"),new Error("Failed to initialize camera");this.camera.maxDimension=this.mapDimension,this.path=t.path||[],this.id=null,this.row=null,this.col=null,this.debug=t.debug,this.checkDebug(console.log,"Map Created successfully")}setMap(t){this.map=t}getMap(){return this.map}renderMap(t){let i=~~(this.camera.x/this.w),e=~~(this.camera.y/this.h),s=Math.ceil((this.camera.x+this.camera.w)/this.w),h=Math.ceil((this.camera.y+this.camera.h)/this.h);for(let n=e;n<h;n++)for(let e=i;e<s;e++)this.id=this.map[n][e],this.row=n,this.col=e,t()}tileAt(t,i){let e=new Vector(~~(t/this.w),~~(i/this.h));return this.map[e.y][e.x]}}Object.assign(TileMap.prototype,AbstractBaseMixin);class TileSet{constructor(t){this.img=new Image,this.img.src=t.img,this.w=t.w,this.h=t.h,this.col=t.col,this.row=t.row,this.spacing=t.spacing||0,this.frame=t.frame}tileAt(t){return new Vector(t.x/this.w,t.y/this.h)}indexAt(t){let i=~~(t%this.col),e=~~(t/this.col);return new Vector(i,e)}valueAt(t,i){return t*this.col+i}}class Scene{constructor(t){this.canvas=t.canvas||null;try{this.ctx=this.canvas.getContext("2d")}catch(t){throw new Error("Failed to initialize canvas: "+t.message)}this.width=t.width||300,this.height=t.height||300,this.canvas.width=this.width,this.canvas.height=this.height,this.controls=t.controls||[],this.joystick=null,this.swipe=null,this.controls.forEach((t,i)=>{"swipe"===t.event?this.swipe=new SwipeControl(this.canvas,t.type):"joystick"===t.event&&(this.joystick=new Joystick(this.canvas,t.style))}),void 0!==t.backgroundColor&&(this.canvas.style.backgroundColor=t.backgroundColor),this.startLoop=t=>requestAnimationFrame(t),this.elapsedTime=0,this.animationFrame=null,this.timeEnded=null,this.timeStarted=null,this.fps=null,Scene.setContext(this.canvas)}calcFps(){this.timeEnded=performance.now(),this.fps=1e3/(this.timeEnded-this.timeStarted),this.timeStarted=this.timeEnded}mainLoop(t){const i=e=>{this.elapsedTime=e,this.animationFrame=i,t()};this.startLoop(i)}static setContext(t){try{CURRENT_CONTEXT=t.getContext("2d")}catch(t){throw new Error('Failed to set the global variabl "CURRENT_CONTEXT": '+t.message)}}}
